<?xml version="1.0" encoding="UTF-8"?>
<local:AbstractFormElement xmlns:fx="http://ns.adobe.com/mxml/2009"
                           xmlns:local="com.tallence.formeditor.studio.elements.*"
                           xmlns:fields="exml:com.tallence.formeditor.studio.config"
                           formElementType="{FIELD_TYPE}"
                           formElementIconCls="tallence-icons tallence-icons--text-area"
                           formElementGroup="input">
  <fx:Script><![CDATA[
    public static const xtype:String = "com.tallence.formeditor.studio.elements.textAreaEditor";
    public static const FIELD_TYPE:String = "TextArea";

    private var config:TextAreaEditor;

    public native function TextAreaEditor(config:TextAreaEditor = null);
    ]]></fx:Script>


  <local:items>
    <fields:TextField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_name_label')}"
                      emptyText="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_name_emptyText')}"
                      formElementStructVE="{getFormElementStructVE()}"
                      propertyName="name"
                      bindTo="{config.bindTo}"
                      forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:TextField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_hint_label')}"
                      emptyText="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_hint_emptyText')}"
                      formElementStructVE="{getFormElementStructVE()}"
                      propertyName="hint"
                      bindTo="{config.bindTo}"
                      forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:CheckboxField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_mandatory_label')}"
                          formElementStructVE="{getFormElementStructVE()}"
                          propertyName="validator.mandatory"
                          defaultValue="false"
                          bindTo="{config.bindTo}"
                          forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:NumberField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_validator_maxSize_label')}"
                        emptyText="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_validator_maxSize_text')}"
                        formElementStructVE="{getFormElementStructVE()}"
                        propertyName="validator.maxSize"
                        bindTo="{config.bindTo}"
                        forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:NumberField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_fields_textArea_rows_label')}"
                        emptyText="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_fields_textArea_rows_text')}"
                        formElementStructVE="{getFormElementStructVE()}"
                        propertyName="rows"
                        bindTo="{config.bindTo}"
                        forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
  </local:items>
</local:AbstractFormElement>